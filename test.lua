require 'busted.runner'()

describe('sniphpets', function()

    _G._MOCK = true
    sniphpets = require'lua.sniphpets'

    describe('get_type', function()
        it('should get type', function()
            assert.are.same('hoge', sniphpets.get_type('hoge $fuga'))
            assert.are.same('hoge', sniphpets.get_type(' hoge $fuga'))
        end)
        it('should set type mixed', function()
            assert.are.same('mixed', sniphpets.get_type('$fuga'))
            assert.are.same('mixed', sniphpets.get_type(' $fuga'))
        end)
    end)

    describe('del_type', function()
        it('should delete type', function()
            assert.are.same('$fuga', sniphpets.del_type('hoge $fuga!'))
            assert.are.same('$fuga', sniphpets.del_type(' hoge $fuga!'))
        end)
    end)

    describe('set_null', function()
        it('should set type nullable', function()
            assert.are.same('hoge|null', sniphpets.set_null('?hoge'))
        end)
    end)

    describe('get_var', function()
        it('should get var', function()
            assert.are.same('$fuga', sniphpets.get_var('hoge $fuga'))
            assert.are.same('$fuga', sniphpets.get_var(' hoge $fuga'))
        end)
    end)

    describe('get_args', function()
        it('should make args iterable', function()
            assert.truthy(type(sniphpets.get_args('hoge, fuga')))
            assert.truthy(type(sniphpets.get_args('hoge')))
            assert.truthy(type(sniphpets.get_args('')))
        end)
    end)

    describe('get_fnc', function()
        it('should make tranfrom', function()
            assert.is_same('fuga', sniphpets.get_fnc('hoge', function (s)return s end)({ hoge = 'fuga' }))
        end)
    end)

    describe('get_indent', function()
        -- TODO
    end)

    describe('doc_get_var', function()
        it('should get @var', function()
            assert.are.same(' * @var hoge\n', sniphpets.doc_get_var('hoge $hoge'))
            assert.are.same(' * @var hoge\n', sniphpets.doc_get_var(' hoge $hoge'))
        end)
        it('should set @var mixed', function()
            assert.are.same(' * @var mixed\n', sniphpets.doc_get_var('$hoge'))
            assert.are.same(' * @var mixed\n', sniphpets.doc_get_var(' $hoge'))
        end)
        it('should set @var nullable', function()
            assert.are.same(' * @var hoge|null\n', sniphpets.doc_get_var('?hoge $hoge'))
            assert.are.same(' * @var hoge|null\n', sniphpets.doc_get_var(' ?hoge $hoge'))
        end)
    end)

    describe('doc_get_param', function()
        it('should get @param', function()
            assert.are.same(' * @param hoge $hoge\n', sniphpets.doc_get_param('hoge $hoge'))
            assert.are.same(' * @param hoge $hoge\n', sniphpets.doc_get_param(' hoge $hoge'))
        end)
        it('should set @param mixed', function()
            assert.are.same(' * @param mixed $hoge\n', sniphpets.doc_get_param('$hoge'))
            assert.are.same(' * @param mixed $hoge\n', sniphpets.doc_get_param(' $hoge'))
        end)
        it('should set @param nullable', function()
            assert.are.same(' * @param hoge|null $hoge\n', sniphpets.doc_get_param('?hoge $hoge'))
            assert.are.same(' * @param hoge|null $hoge\n', sniphpets.doc_get_param(' ?hoge $hoge'))
        end)
    end)

    describe('doc_get_params', function()
        -- TODO
    end)

    describe('doc_get_return', function()
        it('should get @return', function()
            assert.are.same(' * @return hoge\n', sniphpets.doc_get_return(': hoge'))
        end)
    end)

    describe('php_get_var', function()
        it('should get variable', function()
            assert.are.same('$hoge', sniphpets.php_get_var('$hoge'))
        end)
        it('should get variable with type', function()
            assert.are.same('hoge $hoge', sniphpets.php_get_var('hoge $hoge'))
        end)
        it('should get vairable without type', function()
            assert.are.same('$hoge', sniphpets.php_get_var('hoge $hoge!'))
        end)
    end)

    describe('php_get_args', function()
        it('should get arguments', function()
            assert.are.same('$hoge, $fuga', sniphpets.php_get_args('$hoge, $fuga'))
            assert.are.same('type $hoge, $fuga', sniphpets.php_get_args('type $hoge, $fuga'))
            assert.are.same('?type $hoge, $fuga', sniphpets.php_get_args('?type $hoge, $fuga'))
        end)
        it('should get argument without type', function()
            assert.are.same('$hoge, $fuga', sniphpets.php_get_args('type $hoge!, $fuga'))
            assert.are.same('$hoge, $fuga', sniphpets.php_get_args('$hoge, type $fuga!'))
        end)
    end)

end)
